apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.metadata.name }}
  namespace: {{ .Values.redis.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.redis.metadata.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.metadata.name }}
    spec:
      volumes:
        - name: redis-data-pvc
          persistentVolumeClaim:
            claimName: redis-data-pvc
      containers:
        - name: {{ .Values.redis.metadata.name }}
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secret.name }}
                  key: {{ .Values.redis.secret.key }}
          resources:
            limits:
              cpu: {{ .Values.redis.resources.limits.cpu }}
              memory: {{ .Values.redis.resources.limits.memory }}
            requests:
              cpu: {{ .Values.redis.resources.requests.cpu }}
              memory: {{ .Values.redis.resources.requests.memory }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - "$(REDIS_PASSWORD)"
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - "$(REDIS_PASSWORD)"
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: redis-data-pvc
              mountPath: /data
          args:
            - "--requirepass"
            - "$(REDIS_PASSWORD)"     
